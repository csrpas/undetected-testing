name: CI build 3 macos

on:
  schedule:
    - cron: "38 * * * *"
  push:
    branches: [ master ]
  pull_request:
    branches:
  workflow_dispatch:

jobs:
  build:

    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [macos-latest]       # Only macOS
        python-version: ["3.11"]  # Valid Python versions

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install -r requirements.txt
        pip install --upgrade pyautogui
        pip install --upgrade python-xlib

    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        flake8 . --count --show-source --statistics --exclude=temp

    - name: Install Chrome
      run: |
        brew install --cask google-chrome

    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver

    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py --uc

    - name: Check Chrome binary existence
      run: |
        python -c "import os; print(os.path.exists('/Applications/Google Chrome.app'))"

    - name: Display Chrome binary that's used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"

    - name: Run python my_socialblade.py --debug
      run: |
        python my_socialblade.py --debug

    - name: Run python raw_gt.py --debug
      run: |
        python raw_gt.py --debug

    - name: Run python raw_priceline.py --debug
      run: |
        python raw_priceline.py --debug

